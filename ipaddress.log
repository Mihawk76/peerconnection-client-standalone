In file included from ipaddress.cc:28:0:
ipaddress.h:56:28: error: ‘in_addr’ does not name a type
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
                            ^
ipaddress.h:56:37: error: ISO C++ forbids declaration of ‘ip4’ with no type [-fpermissive]
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
                                     ^
ipaddress.h:61:28: error: ‘in6_addr’ does not name a type
   explicit IPAddress(const in6_addr& ip6) : family_(AF_INET6) {
                            ^
ipaddress.h:61:38: error: ISO C++ forbids declaration of ‘ip6’ with no type [-fpermissive]
   explicit IPAddress(const in6_addr& ip6) : family_(AF_INET6) {
                                      ^
ipaddress.h:61:12: error: ‘rtc::IPAddress::IPAddress(const int&)’ cannot be overloaded
   explicit IPAddress(const in6_addr& ip6) : family_(AF_INET6) {
            ^
ipaddress.h:56:12: error: with ‘rtc::IPAddress::IPAddress(const int&)’
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:89:3: error: ‘in_addr’ does not name a type
   in_addr ipv4_address() const;
   ^
ipaddress.h:90:3: error: ‘in6_addr’ does not name a type
   in6_addr ipv6_address() const;
   ^
ipaddress.h:118:5: error: ‘in_addr’ does not name a type
     in_addr ip4;
     ^
ipaddress.h:119:5: error: ‘in6_addr’ does not name a type
     in6_addr ip6;
     ^
ipaddress.h: In constructor ‘rtc::IPAddress::IPAddress()’:
ipaddress.h:52:25: error: ‘AF_UNSPEC’ was not declared in this scope
   IPAddress() : family_(AF_UNSPEC) {
                         ^
ipaddress.h: In constructor ‘rtc::IPAddress::IPAddress(const int&)’:
ipaddress.h:56:52: error: ‘AF_INET’ was not declared in this scope
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
                                                    ^
ipaddress.h:58:8: error: ‘union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
     u_.ip4 = ip4;
        ^
ipaddress.h: In constructor ‘rtc::IPAddress::IPAddress(const int&)’:
ipaddress.h:61:53: error: ‘AF_INET6’ was not declared in this scope
   explicit IPAddress(const in6_addr& ip6) : family_(AF_INET6) {
                                                     ^
ipaddress.h:62:8: error: ‘union rtc::IPAddress::<anonymous>’ has no member named ‘ip6’
     u_.ip6 = ip6;
        ^
ipaddress.h: In constructor ‘rtc::IPAddress::IPAddress(uint32_t)’:
ipaddress.h:65:64: error: ‘AF_INET’ was not declared in this scope
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
                                                                ^
ipaddress.h:67:8: error: ‘union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
     u_.ip4.s_addr = HostToNetwork32(ip_in_host_byte_order);
        ^
ipaddress.h: At global scope:
ipaddress.h:135:26: error: ‘in6_addr’ does not name a type
   InterfaceAddress(const in6_addr& ip6, int ipv6_flags)
                          ^
ipaddress.h:135:36: error: ISO C++ forbids declaration of ‘ip6’ with no type [-fpermissive]
   InterfaceAddress(const in6_addr& ip6, int ipv6_flags)
                                    ^
In file included from nethelpers.h:23:0,
                 from ipaddress.cc:31:
asyncresolverinterface.h: In member function ‘rtc::SocketAddress rtc::AsyncResolverInterface::address() const’:
asyncresolverinterface.h:37:24: error: ‘AF_INET’ was not declared in this scope
     GetResolvedAddress(AF_INET, &addr);
                        ^
In file included from signalthread.h:16:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
criticalsection.h: At global scope:
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
criticalsection.h:75:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(CritScope);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
criticalsection.h:75:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(CritScope);
   ^
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
criticalsection.h:98:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(TryCritScope);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
criticalsection.h:98:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(TryCritScope);
   ^
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
criticalsection.h:124:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(GlobalLockScope);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
criticalsection.h:124:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(GlobalLockScope);
   ^
In file included from scoped_ptr.h:93:0,
                 from messagehandler.h:17,
                 from messagequeue.h:24,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
template_util.h:60:28: error: template argument 1 is invalid
 struct remove_reference<T&&> {
                            ^
In file included from messagehandler.h:17:0,
                 from messagequeue.h:24,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
scoped_ptr.h:150:17: error: expected identifier before ‘sizeof’
   static_assert(sizeof(T) == -1, "do not use array with size as type");
                 ^
scoped_ptr.h:150:17: error: expected ‘,’ or ‘...’ before ‘sizeof’
scoped_ptr.h:150:70: error: ISO C++ forbids declaration of ‘static_assert’ with no type [-fpermissive]
   static_assert(sizeof(T) == -1, "do not use array with size as type");
                                                                      ^
In file included from signalthread.h:16:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
scoped_ptr.h:286:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(scoped_ptr_impl);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
scoped_ptr.h:286:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(scoped_ptr_impl);
   ^
In file included from messagehandler.h:17:0,
                 from messagequeue.h:24,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
scoped_ptr.h: In destructor ‘rtc::internal::scoped_ptr_impl<T, D>::~scoped_ptr_impl()’:
scoped_ptr.h:208:22: error: ‘nullptr’ was not declared in this scope
     if (data_.ptr != nullptr) {
                      ^
In file included from scoped_ptr.h:85:0,
                 from messagehandler.h:17,
                 from messagequeue.h:24,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
scoped_ptr.h: In member function ‘void rtc::internal::scoped_ptr_impl<T, D>::reset(T*)’:
scoped_ptr.h:218:54: error: ‘nullptr’ was not declared in this scope
     assert(!ShouldAbortOnSelfReset<D>::value || p == nullptr || p != data_.ptr);
                                                      ^
In file included from messagehandler.h:17:0,
                 from messagequeue.h:24,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
scoped_ptr.h: In member function ‘T* rtc::internal::scoped_ptr_impl<T, D>::release()’:
scoped_ptr.h:257:17: error: ‘nullptr’ was not declared in this scope
     data_.ptr = nullptr;
                 ^
scoped_ptr.h: In member function ‘T** rtc::internal::scoped_ptr_impl<T, D>::accept()’:
scoped_ptr.h:262:11: error: ‘nullptr’ was not declared in this scope
     reset(nullptr);
           ^
scoped_ptr.h: At global scope:
scoped_ptr.h:330:28: error: function definition does not declare parameters
   scoped_ptr(std::nullptr_t) : impl_(nullptr) {}
                            ^
scoped_ptr.h:343:30: error: expected ‘,’ or ‘...’ before ‘&&’ token
   scoped_ptr(scoped_ptr<U, V>&& other)
                              ^
scoped_ptr.h:359:41: error: expected ‘,’ or ‘...’ before ‘&&’ token
   scoped_ptr& operator=(scoped_ptr<U, V>&& rhs) {
                                         ^
scoped_ptr.h:367:39: error: declaration of ‘operator=’ as non-function
   scoped_ptr& operator=(std::nullptr_t) {
                                       ^
scoped_ptr.h:367:23: error: expected ‘;’ at end of member declaration
   scoped_ptr& operator=(std::nullptr_t) {
                       ^
scoped_ptr.h:370:3: error: ISO C++ forbids declaration of ‘nullptr_t’ with no type [-fpermissive]
   }
   ^
scoped_ptr.h:370:3: error: invalid use of ‘::’
scoped_ptr.h:370:3: error: expected ‘;’ at end of member declaration
scoped_ptr.h:373:41: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   scoped_ptr(const scoped_ptr& other) = delete;
                                         ^
scoped_ptr.h:374:52: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   scoped_ptr& operator=(const scoped_ptr& other) = delete;
                                                    ^
scoped_ptr.h:377:13: error: expected unqualified-id before ‘&&’ token
   scoped_ptr&& Pass() { return std::move(*this); }
             ^
scoped_ptr.h:381:32: error: ‘nullptr’ was not declared in this scope
   void reset(element_type* p = nullptr) { impl_.reset(p); }
                                ^
scoped_ptr.h: In constructor ‘rtc::scoped_ptr<T, D>::scoped_ptr()’:
scoped_ptr.h:321:24: error: ‘nullptr’ was not declared in this scope
   scoped_ptr() : impl_(nullptr) {}
                        ^
scoped_ptr.h: In constructor ‘rtc::scoped_ptr<T, D>::scoped_ptr(rtc::scoped_ptr<U, V>)’:
scoped_ptr.h:344:16: error: ‘other’ was not declared in this scope
       : impl_(&other.impl_) {
                ^
scoped_ptr.h: In member function ‘rtc::scoped_ptr<T, D>& rtc::scoped_ptr<T, D>::operator=(rtc::scoped_ptr<U, V>)’:
scoped_ptr.h:361:22: error: ‘rhs’ was not declared in this scope
     impl_.TakeState(&rhs.impl_);
                      ^
In file included from scoped_ptr.h:85:0,
                 from messagehandler.h:17,
                 from messagequeue.h:24,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
scoped_ptr.h: In member function ‘rtc::scoped_ptr<T, D>::element_type& rtc::scoped_ptr<T, D>::operator*() const’:
scoped_ptr.h:386:27: error: ‘nullptr’ was not declared in this scope
     assert(impl_.get() != nullptr);
                           ^
scoped_ptr.h: In member function ‘rtc::scoped_ptr<T, D>::element_type* rtc::scoped_ptr<T, D>::operator->() const’:
scoped_ptr.h:390:27: error: ‘nullptr’ was not declared in this scope
     assert(impl_.get() != nullptr);
                           ^
In file included from messagehandler.h:17:0,
                 from messagequeue.h:24,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
scoped_ptr.h: In member function ‘rtc::scoped_ptr<T, D>::operator rtc::scoped_ptr<T, D>::Testable() const’:
scoped_ptr.h:412:47: error: ‘nullptr’ was not declared in this scope
     return impl_.get() ? &scoped_ptr::impl_ : nullptr;
                                               ^
scoped_ptr.h: At global scope:
scoped_ptr.h:487:28: error: function definition does not declare parameters
   scoped_ptr(std::nullptr_t) : impl_(nullptr) {}
                            ^
scoped_ptr.h:490:24: error: expected ‘,’ or ‘...’ before ‘&&’ token
   scoped_ptr(scoped_ptr&& other) : impl_(&other.impl_) {}
                        ^
scoped_ptr.h:490:32: error: invalid constructor; you probably meant ‘rtc::scoped_ptr<T [], D> (const rtc::scoped_ptr<T [], D>&)’
   scoped_ptr(scoped_ptr&& other) : impl_(&other.impl_) {}
                                ^
scoped_ptr.h:493:35: error: expected ‘,’ or ‘...’ before ‘&&’ token
   scoped_ptr& operator=(scoped_ptr&& rhs) {
                                   ^
scoped_ptr.h:500:39: error: declaration of ‘operator=’ as non-function
   scoped_ptr& operator=(std::nullptr_t) {
                                       ^
scoped_ptr.h:500:23: error: expected ‘;’ at end of member declaration
   scoped_ptr& operator=(std::nullptr_t) {
                       ^
scoped_ptr.h:503:3: error: ISO C++ forbids declaration of ‘nullptr_t’ with no type [-fpermissive]
   }
   ^
scoped_ptr.h:503:3: error: invalid use of ‘::’
scoped_ptr.h:503:3: error: expected ‘;’ at end of member declaration
scoped_ptr.h:506:41: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   scoped_ptr(const scoped_ptr& other) = delete;
                                         ^
scoped_ptr.h:507:52: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   scoped_ptr& operator=(const scoped_ptr& other) = delete;
                                                    ^
scoped_ptr.h:510:13: error: expected unqualified-id before ‘&&’ token
   scoped_ptr&& Pass() { return std::move(*this); }
             ^
scoped_ptr.h:514:36: error: ‘nullptr’ was not declared in this scope
   void reset(element_type* array = nullptr) { impl_.reset(array); }
                                    ^
scoped_ptr.h: In constructor ‘rtc::scoped_ptr<T [], D>::scoped_ptr()’:
scoped_ptr.h:469:24: error: ‘nullptr’ was not declared in this scope
   scoped_ptr() : impl_(nullptr) {}
                        ^
scoped_ptr.h: In member function ‘rtc::scoped_ptr<T [], D>& rtc::scoped_ptr<T [], D>::operator=(rtc::scoped_ptr<T [], D>)’:
scoped_ptr.h:494:22: error: ‘rhs’ was not declared in this scope
     impl_.TakeState(&rhs.impl_);
                      ^
In file included from scoped_ptr.h:85:0,
                 from messagehandler.h:17,
                 from messagequeue.h:24,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
scoped_ptr.h: In member function ‘rtc::scoped_ptr<T [], D>::element_type& rtc::scoped_ptr<T [], D>::operator[](size_t) const’:
scoped_ptr.h:518:27: error: ‘nullptr’ was not declared in this scope
     assert(impl_.get() != nullptr);
                           ^
In file included from messagehandler.h:17:0,
                 from messagequeue.h:24,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
scoped_ptr.h: In member function ‘rtc::scoped_ptr<T [], D>::operator rtc::scoped_ptr<T [], D>::Testable() const’:
scoped_ptr.h:535:47: error: ‘nullptr’ was not declared in this scope
     return impl_.get() ? &scoped_ptr::impl_ : nullptr;
                                               ^
In file included from signalthread.h:16:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
messagehandler.h: At global scope:
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
messagehandler.h:34:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(MessageHandler);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
messagehandler.h:34:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(MessageHandler);
   ^
In file included from messagequeue.h:24:0,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
messagehandler.h: In member function ‘virtual void rtc::FunctorMessageHandler<rtc::scoped_ptr<T>, FunctorT>::OnMessage(rtc::Message*)’:
messagehandler.h:59:52: error: ‘move’ is not a member of ‘std’
   virtual void OnMessage(Message* msg) { result_ = std::move(functor_()); }
                                                    ^
messagehandler.h: In member function ‘rtc::scoped_ptr<T> rtc::FunctorMessageHandler<rtc::scoped_ptr<T>, FunctorT>::result()’:
messagehandler.h:60:46: error: ‘move’ is not a member of ‘std’
   rtc::scoped_ptr<ReturnT> result() { return std::move(result_); }
                                              ^
In file included from signalthread.h:16:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
socket.h: At global scope:
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
socket.h:193:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(Socket);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
socket.h:193:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(Socket);
   ^
In file included from socketfactory.h:15:0,
                 from socketserver.h:14,
                 from messagequeue.h:28,
                 from thread.h:24,
                 from signalthread.h:18,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
asyncsocket.h:26:16: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   ~AsyncSocket() override;
                ^
asyncsocket.h:28:43: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   AsyncSocket* Accept(SocketAddress* paddr) override = 0;
                                           ^
asyncsocket.h:51:23: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   ~AsyncSocketAdapter() override;
                       ^
asyncsocket.h:53:35: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   SocketAddress GetLocalAddress() const override;
                                   ^
asyncsocket.h:54:36: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   SocketAddress GetRemoteAddress() const override;
                                    ^
asyncsocket.h:55:37: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int Bind(const SocketAddress& addr) override;
                                     ^
asyncsocket.h:56:40: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int Connect(const SocketAddress& addr) override;
                                        ^
asyncsocket.h:57:37: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int Send(const void* pv, size_t cb) override;
                                     ^
asyncsocket.h:58:66: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int SendTo(const void* pv, size_t cb, const SocketAddress& addr) override;
                                                                  ^
asyncsocket.h:59:31: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int Recv(void* pv, size_t cb) override;
                               ^
asyncsocket.h:60:57: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int RecvFrom(void* pv, size_t cb, SocketAddress* paddr) override;
                                                         ^
asyncsocket.h:61:25: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int Listen(int backlog) override;
                         ^
asyncsocket.h:62:43: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   AsyncSocket* Accept(SocketAddress* paddr) override;
                                           ^
asyncsocket.h:63:13: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int Close() override;
             ^
asyncsocket.h:64:18: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int GetError() const override;
                  ^
asyncsocket.h:65:26: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void SetError(int error) override;
                          ^
asyncsocket.h:66:24: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   ConnState GetState() const override;
                        ^
asyncsocket.h:67:32: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int EstimateMTU(uint16_t* mtu) override;
                                ^
asyncsocket.h:68:39: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int GetOption(Option opt, int* value) override;
                                       ^
asyncsocket.h:69:38: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int SetOption(Option opt, int value) override;
                                      ^
In file included from signalthread.h:16:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
messagequeue.h:257:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(MessageQueue);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
messagequeue.h:257:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(MessageQueue);
   ^
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
thread.h:71:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(ThreadManager);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
thread.h:71:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(ThreadManager);
   ^
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
thread.h:90:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(Runnable);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
thread.h:90:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(Runnable);
   ^
In file included from signalthread.h:18:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
thread.h:102:11: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   ~Thread() override;
           ^
thread.h:170:41: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
              MessageList* removed = NULL) override;
                                         ^
thread.h:171:21: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void ReceiveSends() override;
                     ^
In file included from signalthread.h:16:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
thread.h:279:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(Thread);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
thread.h:279:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(Thread);
   ^
In file included from signalthread.h:18:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
thread.h:289:15: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   ~AutoThread() override;
               ^
In file included from signalthread.h:16:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
thread.h:292:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(AutoThread);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
thread.h:292:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(AutoThread);
   ^
constructormagic.h:31:16: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName() = delete;                               \
                ^
thread.h:324:3: note: in expansion of macro ‘RTC_DISALLOW_IMPLICIT_CONSTRUCTORS’
   RTC_DISALLOW_IMPLICIT_CONSTRUCTORS(SocketServerScope);
   ^
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
constructormagic.h:32:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(TypeName)
   ^
thread.h:324:3: note: in expansion of macro ‘RTC_DISALLOW_IMPLICIT_CONSTRUCTORS’
   RTC_DISALLOW_IMPLICIT_CONSTRUCTORS(SocketServerScope);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
constructormagic.h:32:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(TypeName)
   ^
thread.h:324:3: note: in expansion of macro ‘RTC_DISALLOW_IMPLICIT_CONSTRUCTORS’
   RTC_DISALLOW_IMPLICIT_CONSTRUCTORS(SocketServerScope);
   ^
In file included from nethelpers.h:24:0,
                 from ipaddress.cc:31:
signalthread.h:69:17: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   ~SignalThread() override;
                 ^
signalthread.h:92:30: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void OnMessage(Message* msg) override;
                              ^
signalthread.h:106:13: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
     ~Worker() override;
             ^
signalthread.h:107:14: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
     void Run() override;
              ^
In file included from signalthread.h:16:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
constructormagic.h:31:16: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName() = delete;                               \
                ^
signalthread.h:112:5: note: in expansion of macro ‘RTC_DISALLOW_IMPLICIT_CONSTRUCTORS’
     RTC_DISALLOW_IMPLICIT_CONSTRUCTORS(Worker);
     ^
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
constructormagic.h:32:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(TypeName)
   ^
signalthread.h:112:5: note: in expansion of macro ‘RTC_DISALLOW_IMPLICIT_CONSTRUCTORS’
     RTC_DISALLOW_IMPLICIT_CONSTRUCTORS(Worker);
     ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
constructormagic.h:32:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(TypeName)
   ^
signalthread.h:112:5: note: in expansion of macro ‘RTC_DISALLOW_IMPLICIT_CONSTRUCTORS’
     RTC_DISALLOW_IMPLICIT_CONSTRUCTORS(Worker);
     ^
constructormagic.h:31:16: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName() = delete;                               \
                ^
signalthread.h:135:5: note: in expansion of macro ‘RTC_DISALLOW_IMPLICIT_CONSTRUCTORS’
     RTC_DISALLOW_IMPLICIT_CONSTRUCTORS(EnterExit);
     ^
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
constructormagic.h:32:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(TypeName)
   ^
signalthread.h:135:5: note: in expansion of macro ‘RTC_DISALLOW_IMPLICIT_CONSTRUCTORS’
     RTC_DISALLOW_IMPLICIT_CONSTRUCTORS(EnterExit);
     ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
constructormagic.h:32:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(TypeName)
   ^
signalthread.h:135:5: note: in expansion of macro ‘RTC_DISALLOW_IMPLICIT_CONSTRUCTORS’
     RTC_DISALLOW_IMPLICIT_CONSTRUCTORS(EnterExit);
     ^
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
signalthread.h:147:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(SignalThread);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
signalthread.h:147:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(SignalThread);
   ^
In file included from ipaddress.cc:31:0:
nethelpers.h:37:18: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   ~AsyncResolver() override;
                  ^
nethelpers.h:39:39: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void Start(const SocketAddress& addr) override;
                                       ^
nethelpers.h:40:60: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   bool GetResolvedAddress(int family, SocketAddress* addr) const override;
                                                            ^
nethelpers.h:41:18: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   int GetError() const override;
                  ^
nethelpers.h:42:25: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void Destroy(bool wait) override;
                         ^
nethelpers.h:48:15: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void DoWork() override;
               ^
nethelpers.h:49:19: warning: override controls (override/final) only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void OnWorkDone() override;
                   ^
In file included from signalthread.h:16:0,
                 from nethelpers.h:24,
                 from ipaddress.cc:31:
constructormagic.h:21:31: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   TypeName(const TypeName&) = delete;          \
                               ^
logging.h:234:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(LogMessage);
   ^
constructormagic.h:16:37: warning: defaulted and deleted functions only available with -std=c++11 or -std=gnu++11 [enabled by default]
   void operator=(const TypeName&) = delete
                                     ^
constructormagic.h:22:3: note: in expansion of macro ‘RTC_DISALLOW_ASSIGN’
   RTC_DISALLOW_ASSIGN(TypeName)
   ^
logging.h:234:3: note: in expansion of macro ‘RTC_DISALLOW_COPY_AND_ASSIGN’
   RTC_DISALLOW_COPY_AND_ASSIGN(LogMessage);
   ^
ipaddress.cc: In member function ‘uint32_t rtc::IPAddress::v4AddressAsHostOrderInteger() const’:
ipaddress.cc:50:31: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
     return NetworkToHost32(u_.ip4.s_addr);
                               ^
ipaddress.cc: In member function ‘bool rtc::IPAddress::operator==(const rtc::IPAddress&) const’:
ipaddress.cc:76:23: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
     return memcmp(&u_.ip4, &other.u_.ip4, sizeof(u_.ip4)) == 0;
                       ^
ipaddress.cc:76:38: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
     return memcmp(&u_.ip4, &other.u_.ip4, sizeof(u_.ip4)) == 0;
                                      ^
ipaddress.cc:76:53: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
     return memcmp(&u_.ip4, &other.u_.ip4, sizeof(u_.ip4)) == 0;
                                                     ^
ipaddress.cc:79:23: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip6’
     return memcmp(&u_.ip6, &other.u_.ip6, sizeof(u_.ip6)) == 0;
                       ^
ipaddress.cc:79:38: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip6’
     return memcmp(&u_.ip6, &other.u_.ip6, sizeof(u_.ip6)) == 0;
                                      ^
ipaddress.cc:79:53: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip6’
     return memcmp(&u_.ip6, &other.u_.ip6, sizeof(u_.ip6)) == 0;
                                                     ^
ipaddress.cc: In member function ‘bool rtc::IPAddress::operator<(const rtc::IPAddress&) const’:
ipaddress.cc:106:33: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
       return NetworkToHost32(u_.ip4.s_addr) <
                                 ^
ipaddress.cc:107:36: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
           NetworkToHost32(other.u_.ip4.s_addr);
                                    ^
ipaddress.cc:110:25: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip6’
       return memcmp(&u_.ip6.s6_addr, &other.u_.ip6.s6_addr, 16) < 0;
                         ^
ipaddress.cc:110:48: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip6’
       return memcmp(&u_.ip6.s6_addr, &other.u_.ip6.s6_addr, 16) < 0;
                                                ^
ipaddress.cc: At global scope:
ipaddress.cc:122:36: error: no ‘in6_addr rtc::IPAddress::ipv6_address() const’ member function declared in class ‘rtc::IPAddress’
 in6_addr IPAddress::ipv6_address() const {
                                    ^
ipaddress.cc:126:35: error: no ‘in_addr rtc::IPAddress::ipv4_address() const’ member function declared in class ‘rtc::IPAddress’
 in_addr IPAddress::ipv4_address() const {
                                   ^
ipaddress.cc: In member function ‘std::string rtc::IPAddress::ToString() const’:
ipaddress.cc:135:25: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
   const void* src = &u_.ip4;
                         ^
ipaddress.cc:137:15: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip6’
     src = &u_.ip6;
               ^
ipaddress.cc: In member function ‘rtc::IPAddress rtc::IPAddress::Normalized() const’:
ipaddress.cc:187:42: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip6’
   in_addr addr = ExtractMappedAddress(u_.ip6);
                                          ^
ipaddress.cc:188:24: error: no matching function for call to ‘rtc::IPAddress::IPAddress(in_addr&)’
   return IPAddress(addr);
                        ^
ipaddress.cc:188:24: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘in_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘in_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘in_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc: In member function ‘rtc::IPAddress rtc::IPAddress::AsIPv6Address() const’:
ipaddress.cc:196:37: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
   ::memcpy(&v6addr.s6_addr[12], &u_.ip4.s_addr, sizeof(u_.ip4.s_addr));
                                     ^
ipaddress.cc:196:59: error: ‘const union rtc::IPAddress::<anonymous>’ has no member named ‘ip4’
   ::memcpy(&v6addr.s6_addr[12], &u_.ip4.s_addr, sizeof(u_.ip4.s_addr));
                                                           ^
ipaddress.cc:197:26: error: no matching function for call to ‘rtc::IPAddress::IPAddress(in6_addr&)’
   return IPAddress(v6addr);
                          ^
ipaddress.cc:197:26: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc: In function ‘bool rtc::IPFromAddrInfo(rtc::addrinfo*, rtc::IPAddress*)’:
ipaddress.cc:240:21: error: invalid use of incomplete type ‘struct rtc::addrinfo’
   if (!info || !info->ai_addr) {
                     ^
In file included from ipaddress.cc:28:0:
ipaddress.h:151:28: error: forward declaration of ‘struct rtc::addrinfo’
 bool IPFromAddrInfo(struct addrinfo* info, IPAddress* out);
                            ^
ipaddress.cc:243:11: error: invalid use of incomplete type ‘struct rtc::addrinfo’
   if (info->ai_addr->sa_family == AF_INET) {
           ^
In file included from ipaddress.cc:28:0:
ipaddress.h:151:28: error: forward declaration of ‘struct rtc::addrinfo’
 bool IPFromAddrInfo(struct addrinfo* info, IPAddress* out);
                            ^
ipaddress.cc:244:60: error: invalid use of incomplete type ‘struct rtc::addrinfo’
     sockaddr_in* addr = reinterpret_cast<sockaddr_in*>(info->ai_addr);
                                                            ^
In file included from ipaddress.cc:28:0:
ipaddress.h:151:28: error: forward declaration of ‘struct rtc::addrinfo’
 bool IPFromAddrInfo(struct addrinfo* info, IPAddress* out);
                            ^
ipaddress.cc:245:36: error: no matching function for call to ‘rtc::IPAddress::IPAddress(in_addr&)’
     *out = IPAddress(addr->sin_addr);
                                    ^
ipaddress.cc:245:36: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘in_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘in_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘in_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc:247:18: error: invalid use of incomplete type ‘struct rtc::addrinfo’
   } else if (info->ai_addr->sa_family == AF_INET6) {
                  ^
In file included from ipaddress.cc:28:0:
ipaddress.h:151:28: error: forward declaration of ‘struct rtc::addrinfo’
 bool IPFromAddrInfo(struct addrinfo* info, IPAddress* out);
                            ^
ipaddress.cc:248:62: error: invalid use of incomplete type ‘struct rtc::addrinfo’
     sockaddr_in6* addr = reinterpret_cast<sockaddr_in6*>(info->ai_addr);
                                                              ^
In file included from ipaddress.cc:28:0:
ipaddress.h:151:28: error: forward declaration of ‘struct rtc::addrinfo’
 bool IPFromAddrInfo(struct addrinfo* info, IPAddress* out);
                            ^
ipaddress.cc:249:37: error: no matching function for call to ‘rtc::IPAddress::IPAddress(in6_addr&)’
     *out = IPAddress(addr->sin6_addr);
                                     ^
ipaddress.cc:249:37: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc: In function ‘bool rtc::IPFromString(const string&, rtc::IPAddress*)’:
ipaddress.cc:266:27: error: no matching function for call to ‘rtc::IPAddress::IPAddress(in6_addr&)’
     *out = IPAddress(addr6);
                           ^
ipaddress.cc:266:27: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc:268:26: error: no matching function for call to ‘rtc::IPAddress::IPAddress(in_addr&)’
     *out = IPAddress(addr);
                          ^
ipaddress.cc:268:26: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘in_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘in_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘in_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc: In function ‘bool rtc::IPIsAny(const rtc::IPAddress&)’:
ipaddress.cc:289:41: error: no matching function for call to ‘rtc::IPAddress::IPAddress(const in6_addr&)’
       return ip == IPAddress(in6addr_any) || ip == IPAddress(kV4MappedPrefix);
                                         ^
ipaddress.cc:289:41: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc:289:77: error: no matching function for call to ‘rtc::IPAddress::IPAddress(const in6_addr&)’
       return ip == IPAddress(in6addr_any) || ip == IPAddress(kV4MappedPrefix);
                                                                             ^
ipaddress.cc:289:77: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc: In function ‘bool rtc::IPIsLoopback(const rtc::IPAddress&)’:
ipaddress.cc:302:46: error: no matching function for call to ‘rtc::IPAddress::IPAddress(const in6_addr&)’
       return ip == IPAddress(in6addr_loopback);
                                              ^
ipaddress.cc:302:46: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc: In function ‘size_t rtc::HashIP(const rtc::IPAddress&)’:
ipaddress.cc:327:17: error: ‘const class rtc::IPAddress’ has no member named ‘ipv4_address’
       return ip.ipv4_address().s_addr;
                 ^
ipaddress.cc:330:28: error: ‘const class rtc::IPAddress’ has no member named ‘ipv6_address’
       in6_addr v6addr = ip.ipv6_address();
                            ^
ipaddress.cc: In function ‘rtc::IPAddress rtc::TruncateIP(const rtc::IPAddress&, int)’:
ipaddress.cc:351:49: error: ‘const class rtc::IPAddress’ has no member named ‘ipv4_address’
     uint32_t host_order_ip = NetworkToHost32(ip.ipv4_address().s_addr);
                                                 ^
ipaddress.cc:354:28: error: no matching function for call to ‘rtc::IPAddress::IPAddress(in_addr&)’
     return IPAddress(masked);
                            ^
ipaddress.cc:354:28: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘in_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘in_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘in_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc:360:35: error: no matching function for call to ‘rtc::IPAddress::IPAddress(const in6_addr&)’
       return IPAddress(in6addr_any);
                                   ^
ipaddress.cc:360:35: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc:362:26: error: ‘const class rtc::IPAddress’ has no member named ‘ipv6_address’
     in6_addr v6addr = ip.ipv6_address();
                          ^
ipaddress.cc:376:28: error: no matching function for call to ‘rtc::IPAddress::IPAddress(in6_addr&)’
     return IPAddress(v6addr);
                            ^
ipaddress.cc:376:28: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘in6_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc: In function ‘int rtc::CountIPMaskBits(rtc::IPAddress)’:
ipaddress.cc:386:44: error: ‘class rtc::IPAddress’ has no member named ‘ipv4_address’
       word_to_count = NetworkToHost32(mask.ipv4_address().s_addr);
                                            ^
ipaddress.cc:390:30: error: ‘class rtc::IPAddress’ has no member named ‘ipv6_address’
       in6_addr v6addr = mask.ipv6_address();
                              ^
ipaddress.cc: In function ‘bool rtc::IPIsHelper(const rtc::IPAddress&, const in6_addr&, int)’:
ipaddress.cc:431:22: error: ‘const class rtc::IPAddress’ has no member named ‘ipv6_address’
   in6_addr addr = ip.ipv6_address();
                      ^
ipaddress.cc: In function ‘bool rtc::IPIsLinkLocal(const rtc::IPAddress&)’:
ipaddress.cc:445:22: error: ‘const class rtc::IPAddress’ has no member named ‘ipv6_address’
   in6_addr addr = ip.ipv6_address();
                      ^
ipaddress.cc: In function ‘bool rtc::IPIsMacBased(const rtc::IPAddress&)’:
ipaddress.cc:453:22: error: ‘const class rtc::IPAddress’ has no member named ‘ipv6_address’
   in6_addr addr = ip.ipv6_address();
                      ^
ipaddress.cc: In function ‘bool rtc::IPIsSiteLocal(const rtc::IPAddress&)’:
ipaddress.cc:460:22: error: ‘const class rtc::IPAddress’ has no member named ‘ipv6_address’
   in6_addr addr = ip.ipv6_address();
                      ^
ipaddress.cc: In function ‘bool rtc::IPIsULA(const rtc::IPAddress&)’:
ipaddress.cc:466:22: error: ‘const class rtc::IPAddress’ has no member named ‘ipv6_address’
   in6_addr addr = ip.ipv6_address();
                      ^
ipaddress.cc: In function ‘rtc::IPAddress rtc::GetLoopbackIP(int)’:
ipaddress.cc:512:43: error: no matching function for call to ‘rtc::IPAddress::IPAddress(const in6_addr&)’
     return rtc::IPAddress(in6addr_loopback);
                                           ^
ipaddress.cc:512:43: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
ipaddress.cc: In function ‘rtc::IPAddress rtc::GetAnyIP(int)’:
ipaddress.cc:522:38: error: no matching function for call to ‘rtc::IPAddress::IPAddress(const in6_addr&)’
     return rtc::IPAddress(in6addr_any);
                                      ^
ipaddress.cc:522:38: note: candidates are:
In file included from ipaddress.cc:28:0:
ipaddress.h:70:3: note: rtc::IPAddress::IPAddress(const rtc::IPAddress&)
   IPAddress(const IPAddress& other) : family_(other.family_) {
   ^
ipaddress.h:70:3: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const rtc::IPAddress&’
ipaddress.h:65:12: note: rtc::IPAddress::IPAddress(uint32_t)
   explicit IPAddress(uint32_t ip_in_host_byte_order) : family_(AF_INET) {
            ^
ipaddress.h:65:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘uint32_t {aka unsigned int}’
ipaddress.h:56:12: note: rtc::IPAddress::IPAddress(const int&)
   explicit IPAddress(const in_addr& ip4) : family_(AF_INET) {
            ^
ipaddress.h:56:12: note:   no known conversion for argument 1 from ‘const in6_addr’ to ‘const int&’
ipaddress.h:52:3: note: rtc::IPAddress::IPAddress()
   IPAddress() : family_(AF_UNSPEC) {
   ^
ipaddress.h:52:3: note:   candidate expects 0 arguments, 1 provided
